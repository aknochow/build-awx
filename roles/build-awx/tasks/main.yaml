---
- name: Clone {{ source_repo }}:{{ source_branch }} from github.com
  ansible.builtin.git:
    repo: https://github.com/{{ source_repo }}.git
    dest: src/{{ source_repo }}
    single_branch: yes
    version: "{{ source_branch }}"
    force: true

- name: Set build_image repo and tag when using ttl.sh
  ansible.builtin.set_fact:
    build_image_repo: "{{ ansible_date_time.iso8601_micro | to_uuid }}"
    build_image_tag: 1h
  when: build_image_registry == "ttl.sh" and pr_sha == ""

- name: Set build_image repo and tag when using ttl.sh for ci
  ansible.builtin.set_fact:
    build_image_repo: "{{ pr_sha }}"
    build_image_tag: 2h
  when: build_image_registry == "ttl.sh" and pr_sha != ""   

- name: Get version from SCM if not explicitly provided
  community.general.make:
    chdir: src/{{ source_repo }}
    target: print-VERSION
  register: scm_version
  failed_when: not scm_version.stdout
  when: awx_version is not defined    

- name: Set awx_version
  ansible.builtin.set_fact:
    awx_version: "{{ scm_version.stdout | split('+') | first  }}"
  when: awx_version is not defined

- name: Create {{ template_dest }} directory
  ansible.builtin.file:
    path: "{{ dockerfile_dest }}/{{ template_dest }}"
    state: directory

- name: Render supervisor configs
  ansible.builtin.template:
    src: src/{{ source_repo }}/tools/ansible/roles/dockerfile/templates/{{ item }}.conf.j2
    dest: "{{ dockerfile_dest }}/{{ template_dest }}/{{ item }}.conf"
  with_items:
    - supervisor
    - supervisor_task

- name: Render Dockerfile
  ansible.builtin.template:
    src: src/{{ source_repo }}/tools/ansible/roles/dockerfile/templates/Dockerfile.j2
    dest: "{{ dockerfile_dest }}/{{ dockerfile_name }}"

- name: Verify awx-logos directory exists for official install
  stat:
    path: src/awx-logos
  register: logosdir
  failed_when: logosdir.stat.isdir is not defined or not logosdir.stat.isdir
  when: awx_official|default(false)|bool

- name: Copy logos for inclusion in sdist
  copy:
    src: src/awx-logos/awx/ui/client/assets/
    dest: src/{{ source_repo }}/awx/ui/public/static/media/
  when: awx_official|default(false)|bool

- name: Build AWX image {{ build_image }} with podman
  containers.podman.podman_image:
    name: "{{ build_image }}"
    path: "{{ dockerfile_dest }}"
    push: "{{ build_image_push }}"
    build:
      extra_args: "--build-arg VERSION={{ awx_version }} --build-arg SETUPTOOLS_SCM_PRETEND_VERSION={{ awx_version }} --build-arg HEADLESS={{ headless }}"